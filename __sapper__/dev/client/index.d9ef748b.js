import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as stores$1, b as validate_store, c as component_subscribe, g as goto, o as onMount, e as space, f as element, t as text, q as query_selector_all, h as detach_dev, j as claim_space, k as claim_element, l as children, m as claim_text, n as attr_dev, p as add_location, r as insert_dev, u as append_dev, w as set_input_value, x as listen_dev, y as set_data_dev, z as noop, A as run_all, B as set_store_value } from './client.9af4dc2f.js';

/* src\routes\index.svelte generated by Svelte v3.31.2 */
const file = "src\\routes\\index.svelte";

function create_fragment(ctx) {
	let t0;
	let div;
	let p0;
	let t1;
	let t2;
	let input;
	let t3;
	let p1;
	let t4;
	let br;
	let t5;
	let t6;
	let button;
	let t7;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			t0 = space();
			div = element("div");
			p0 = element("p");
			t1 = text(/*infoMsg*/ ctx[1]);
			t2 = space();
			input = element("input");
			t3 = space();
			p1 = element("p");
			t4 = text(":مثال ");
			br = element("br");
			t5 = text("https://t.me/g_7akina_bot?start=566571423");
			t6 = space();
			button = element("button");
			t7 = text(/*btnText*/ ctx[2]);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-8e02cb\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			p0 = claim_element(div_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t1 = claim_text(p0_nodes, /*infoMsg*/ ctx[1]);
			p0_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);

			input = claim_element(div_nodes, "INPUT", {
				type: true,
				placeholder: true,
				class: true
			});

			t3 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t4 = claim_text(p1_nodes, ":مثال ");
			br = claim_element(p1_nodes, "BR", {});
			t5 = claim_text(p1_nodes, "https://t.me/g_7akina_bot?start=566571423");
			p1_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);
			button = claim_element(div_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t7 = claim_text(button_nodes, /*btnText*/ ctx[2]);
			button_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "حاكينا - نقاط";
			attr_dev(p0, "class", "text-red-500 info-text mb-2");
			add_location(p0, file, 58, 1, 1697);
			attr_dev(input, "type", "text");
			attr_dev(input, "placeholder", "رابط الدعوة الخاص بك");
			attr_dev(input, "class", " text-center border-solid border-2 min-w-full focus:outline-none focus:ring focus:border-blue-800 h-16");
			add_location(input, file, 59, 1, 1751);
			add_location(br, file, 63, 45, 1985);
			attr_dev(p1, "class", "mb-2 text-gray-500 text-sm");
			add_location(p1, file, 63, 1, 1941);
			attr_dev(button, "class", "focus:outline-none focus:ring text-white uppercase px-8 py-2 rounded bg-blue-600 text-blue-50 max-w-max shadow-sm hover:shadow-lg");
			add_location(button, file, 64, 1, 2038);
			attr_dev(div, "class", "text-center");
			add_location(div, file, 57, 0, 1670);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, p0);
			append_dev(p0, t1);
			append_dev(div, t2);
			append_dev(div, input);
			set_input_value(input, /*link*/ ctx[0]);
			append_dev(div, t3);
			append_dev(div, p1);
			append_dev(p1, t4);
			append_dev(p1, br);
			append_dev(p1, t5);
			append_dev(div, t6);
			append_dev(div, button);
			append_dev(button, t7);

			if (!mounted) {
				dispose = [
					listen_dev(input, "input", /*input_input_handler*/ ctx[5]),
					listen_dev(button, "click", /*submit*/ ctx[4], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*infoMsg*/ 2) set_data_dev(t1, /*infoMsg*/ ctx[1]);

			if (dirty & /*link*/ 1 && input.value !== /*link*/ ctx[0]) {
				set_input_value(input, /*link*/ ctx[0]);
			}

			if (dirty & /*btnText*/ 4) set_data_dev(t7, /*btnText*/ ctx[2]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $session;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	let link;
	let infoMsg = "";
	let btnText = "تحقق";
	const { session } = stores$1();
	validate_store(session, "session");
	component_subscribe($$self, session, value => $$invalidate(6, $session = value));

	function submit() {
		if ((/https?:\/\/(t(elegram)?\.me|telegram\.org)\/([a-zA-Z0-9\_]{5,32})$\/?/).test(link) || (/https?:\/\/(t(elegram)?\.me|telegram\.org)\/g_7akina_bot\?start=([0-9]*)/).test(link)) {
			return grecaptcha.execute("6LdEDyYaAAAAAAgRMYwA01ImK8hN5gGi9au6KTgB", { action: "auth" }).then(function (token) {
				if (token) {
					window.serverCall("/settoken", { token }).then(res => res.json()).then(data => {
						authorize();
						set_store_value(session, $session.googleToken = token, $session);
					});
				} else {
					window.location.reload();
				}
			});
		}

		$$invalidate(1, infoMsg = "تحقق من الرابط المدرج");
	}

	// onMount(()=>{
	// 	window.onSubmit = async function(token) {
	// 	};
	// 	console.log(grecaptcha.getResponse());
	// 	// window.onloadCallback = function() {
	// 		// grecaptcha.render('submit', {
	// 		// 	'sitekey' : '6LdEDyYaAAAAAAgRMYwA01ImK8hN5gGi9au6KTgB',
	// 		// 	'callback' : onSubmit
	// 		// });
	// 	// };
	// })
	const authorize = async () => {
		$$invalidate(2, btnText = "جار التحقق ...");
		$$invalidate(1, infoMsg = "");

		try {
			let response = await window.serverCall("/auth", { link });
			let data = await response.json();
			$$invalidate(2, btnText = "تحقق");

			if (!data.state) {
				$$invalidate(1, infoMsg = data.message
				? data.message
				: "حدث خطأ الرجاء مراسلة المطور");

				return;
			}

			set_store_value(session, $session.token = data.accessToken, $session);
			set_store_value(session, $session.step = 1, $session);
			goto("/steps/1");
		} catch(error) {
			$$invalidate(2, btnText = "تحقق");
			$$invalidate(1, infoMsg = "حدث خطأ الرجاء مراسلة المطور");
		}
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	function input_input_handler() {
		link = this.value;
		$$invalidate(0, link);
	}

	$$self.$capture_state = () => ({
		link,
		infoMsg,
		btnText,
		stores: stores$1,
		goto,
		onMount,
		session,
		submit,
		authorize,
		$session
	});

	$$self.$inject_state = $$props => {
		if ("link" in $$props) $$invalidate(0, link = $$props.link);
		if ("infoMsg" in $$props) $$invalidate(1, infoMsg = $$props.infoMsg);
		if ("btnText" in $$props) $$invalidate(2, btnText = $$props.btnText);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [link, infoMsg, btnText, session, submit, input_input_handler];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZDllZjc0OGIuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cdGxldCBsaW5rXG5cdGxldCBpbmZvTXNnID0gJydcblx0bGV0IGJ0blRleHQgPSAn2KrYrdmC2YInXG5cdGltcG9ydCB7IHN0b3JlcywgZ290byB9IGZyb20gJ0BzYXBwZXIvYXBwJztcblx0aW1wb3J0IHtvbk1vdW50fSBmcm9tICdzdmVsdGUnXG5cdGNvbnN0IHsgc2Vzc2lvbiB9ID0gc3RvcmVzKCk7XG5cdGZ1bmN0aW9uIHN1Ym1pdCgpe1xuXHRcdGlmKC9odHRwcz86XFwvXFwvKHQoZWxlZ3JhbSk/XFwubWV8dGVsZWdyYW1cXC5vcmcpXFwvKFthLXpBLVowLTlcXF9dezUsMzJ9KSRcXC8/Ly50ZXN0KGxpbmspIHx8IC9odHRwcz86XFwvXFwvKHQoZWxlZ3JhbSk/XFwubWV8dGVsZWdyYW1cXC5vcmcpXFwvZ183YWtpbmFfYm90XFw/c3RhcnQ9KFswLTldKikvLnRlc3QobGluaykpe1xuICAgICAgICAgICAgcmV0dXJuIGdyZWNhcHRjaGEuZXhlY3V0ZSgnNkxkRUR5WWFBQUFBQUFnUk1Zd0EwMUltSzhoTjVnR2k5YXU2S1RnQicsIHthY3Rpb246ICdhdXRoJ30pLnRoZW4oZnVuY3Rpb24odG9rZW4pIHtcblx0XHRcdFx0aWYodG9rZW4pe1xuXHRcdFx0XHRcdHdpbmRvdy5zZXJ2ZXJDYWxsKCcvc2V0dG9rZW4nLHt0b2tlbn0pLnRoZW4oKHJlcyk9PnJlcy5qc29uKCkpLnRoZW4oZGF0YT0+e1xuXHRcdFx0XHRcdFx0YXV0aG9yaXplKClcblx0XHRcdFx0XHRcdCRzZXNzaW9uLmdvb2dsZVRva2VuID0gdG9rZW5cblx0XHRcdFx0XHR9KVxuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdGluZm9Nc2cgPSAn2KrYrdmC2YIg2YXZhiDYp9mE2LHYp9io2Lcg2KfZhNmF2K/YsdisJ1xuXHR9XG5cdC8vIG9uTW91bnQoKCk9Pntcblx0Ly8gXHR3aW5kb3cub25TdWJtaXQgPSBhc3luYyBmdW5jdGlvbih0b2tlbikge1xuXHRcdFx0XG5cdC8vIFx0fTtcblx0Ly8gXHRjb25zb2xlLmxvZyhncmVjYXB0Y2hhLmdldFJlc3BvbnNlKCkpO1xuXHQvLyBcdC8vIHdpbmRvdy5vbmxvYWRDYWxsYmFjayA9IGZ1bmN0aW9uKCkge1xuXHQvLyBcdFx0Ly8gZ3JlY2FwdGNoYS5yZW5kZXIoJ3N1Ym1pdCcsIHtcblx0Ly8gXHRcdC8vIFx0J3NpdGVrZXknIDogJzZMZEVEeVlhQUFBQUFBZ1JNWXdBMDFJbUs4aE41Z0dpOWF1NktUZ0InLFxuXHQvLyBcdFx0Ly8gXHQnY2FsbGJhY2snIDogb25TdWJtaXRcblx0Ly8gXHRcdC8vIH0pO1xuXHQvLyBcdC8vIH07XG5cdC8vIH0pXG5cdGNvbnN0IGF1dGhvcml6ZSA9IGFzeW5jICgpPT57XG5cdFx0YnRuVGV4dCA9ICfYrNin2LEg2KfZhNiq2K3ZgtmCIC4uLidcblx0XHRpbmZvTXNnID0gJydcbiAgICAgICAgdHJ5IHtcblx0XHRcdGxldCByZXNwb25zZSA9IGF3YWl0IHdpbmRvdy5zZXJ2ZXJDYWxsKCcvYXV0aCcse2xpbmt9KVxuXHRcdFx0bGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcblx0XHRcdGJ0blRleHQgPSAn2KrYrdmC2YInXG4gICAgICAgICAgICBpZighZGF0YS5zdGF0ZSl7XG5cdFx0XHRcdGluZm9Nc2cgPSBkYXRhLm1lc3NhZ2UgPyBkYXRhLm1lc3NhZ2U6J9it2K/YqyDYrti32KMg2KfZhNix2KzYp9ihINmF2LHYp9iz2YTYqSDYp9mE2YXYt9mI2LEnXG5cdFx0XHRcdHJldHVybjtcbiAgICAgICAgICAgIH1cblx0XHRcdCRzZXNzaW9uLnRva2VuID0gZGF0YS5hY2Nlc3NUb2tlblxuXHRcdFx0JHNlc3Npb24uc3RlcCA9IDFcblx0XHRcdGdvdG8oJy9zdGVwcy8xJylcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdGJ0blRleHQgPSAn2KrYrdmC2YInXG4gICAgICAgICAgICBpbmZvTXNnID0gJ9it2K/YqyDYrti32KMg2KfZhNix2KzYp9ihINmF2LHYp9iz2YTYqSDYp9mE2YXYt9mI2LEnXG4gICAgICAgIH1cbiAgICB9XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPtit2KfZg9mK2YbYpyAtINmG2YLYp9i3PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXJcIj5cblx0PHAgY2xhc3M9XCJ0ZXh0LXJlZC01MDAgaW5mby10ZXh0IG1iLTJcIj57aW5mb01zZ308L3A+XG5cdDxpbnB1dCB0eXBlPVwidGV4dFwiXG5cdHBsYWNlaG9sZGVyPVwi2LHYp9io2Lcg2KfZhNiv2LnZiNipINin2YTYrtin2LUg2KjZg1wiXG5cdGJpbmQ6dmFsdWU9e2xpbmt9XG5cdGNsYXNzPVwiIHRleHQtY2VudGVyIGJvcmRlci1zb2xpZCBib3JkZXItMiBtaW4tdy1mdWxsIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nIGZvY3VzOmJvcmRlci1ibHVlLTgwMCBoLTE2XCIgLz5cblx0PHAgY2xhc3M9XCJtYi0yIHRleHQtZ3JheS01MDAgdGV4dC1zbVwiPjrZhdir2KfZhCA8YnIvPmh0dHBzOi8vdC5tZS9nXzdha2luYV9ib3Q/c3RhcnQ9NTY2NTcxNDIzIDwvcD5cblx0PGJ1dHRvbiBvbjpjbGljaz17c3VibWl0fSBjbGFzcz1cImZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nIHRleHQtd2hpdGUgdXBwZXJjYXNlIHB4LTggcHktMiByb3VuZGVkIGJnLWJsdWUtNjAwIHRleHQtYmx1ZS01MCBtYXgtdy1tYXggc2hhZG93LXNtIGhvdmVyOnNoYWRvdy1sZ1wiPntidG5UZXh0fTwvYnV0dG9uPlxuPC9kaXY+XG4iXSwibmFtZXMiOlsic3RvcmVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQTBEeUMsR0FBTzs7Ozs7Ozs7Ozt5QkFNc0gsR0FBTzs7Ozs7Ozs7Ozs7eUNBTnBJLEdBQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZDQU1zSCxHQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQUhoSyxHQUFJOzs7Ozs7Ozs7Ozs7OzRDQUdFLEdBQU07Ozs7Ozs7MkRBTmdCLEdBQU87O3NEQUduQyxHQUFJO29DQUFKLEdBQUk7OzsyREFHcUosR0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBL0R4SyxJQUFJO0tBQ0osT0FBTyxHQUFHLEVBQUU7S0FDWixPQUFPLEdBQUcsTUFBTTtTQUdaLE9BQU8sS0FBS0EsUUFBTTs7OztVQUNqQixNQUFNO09BQ1gsdUVBQXVFLEVBQUMsSUFBSSxDQUFDLElBQUksTUFBSywwRUFBMEUsRUFBQyxJQUFJLENBQUMsSUFBSTtVQUM1SixVQUFVLENBQUMsT0FBTyxDQUFDLDBDQUEwQyxJQUFHLE1BQU0sRUFBRSxNQUFNLElBQUcsSUFBSSxXQUFVLEtBQUs7UUFDaEgsS0FBSztLQUNQLE1BQU0sQ0FBQyxVQUFVLENBQUMsV0FBVyxJQUFFLEtBQUssSUFBRyxJQUFJLENBQUUsR0FBRyxJQUFHLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUk7TUFDdkUsU0FBUzsrQkFDVCxRQUFRLENBQUMsV0FBVyxHQUFHLEtBQUs7OztLQUc3QixNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU07Ozs7O2tCQUl6QixPQUFPLEdBQUcsdUJBQXVCOzs7Ozs7Ozs7Ozs7OztPQWM1QixTQUFTO2tCQUNkLE9BQU8sR0FBRyxnQkFBZ0I7a0JBQzFCLE9BQU8sR0FBRyxFQUFFOzs7T0FFUCxRQUFRLFNBQVMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLElBQUUsSUFBSTtPQUNoRCxJQUFJLFNBQVMsUUFBUSxDQUFDLElBQUk7bUJBQzlCLE9BQU8sR0FBRyxNQUFNOztRQUNILElBQUksQ0FBQyxLQUFLO29CQUN0QixPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU87TUFBRyxJQUFJLENBQUMsT0FBTztNQUFDLDhCQUE4Qjs7Ozs7NEJBR3JFLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVc7NEJBQ2pDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsQ0FBQztHQUNqQixJQUFJLENBQUMsVUFBVTtVQUNELEtBQUs7bUJBQ25CLE9BQU8sR0FBRyxNQUFNO21CQUNQLE9BQU8sR0FBRyw4QkFBOEI7Ozs7Ozs7Ozs7O0VBV3ZDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
